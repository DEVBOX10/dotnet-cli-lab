//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.DotNet.Tools.Uninstall {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LocalizableStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LocalizableStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.DotNet.Tools.Uninstall.LocalizableStrings", typeof(LocalizableStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must specify exactly one of: {0}..
        /// </summary>
        internal static string BundleTypeMissingExceptionMessage {
            get {
                return ResourceManager.GetString("BundleTypeMissingExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Canceling: waiting for the current uninstall to complete..
        /// </summary>
        internal static string CancelingMessage {
            get {
                return ResourceManager.GetString("CancelingMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allowed values are &quot;Y&quot; and &quot;n&quot;..
        /// </summary>
        internal static string ConfirmationPromptInvalidExceptionMessage {
            get {
                return ResourceManager.GetString("ConfirmationPromptInvalidExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following items will be removed:
        ///{0}
        ///
        ///To avoid breaking Visual Studio or other problems, read https://aka.ms/dotnet-core-uninstall.
        ///
        ///Do you want to continue? [Y/n] .
        /// </summary>
        internal static string ConfirmationPromptOutputFormat {
            get {
                return ResourceManager.GetString("ConfirmationPromptOutputFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display .NET Core SDKs and Runtimes that will be removed..
        /// </summary>
        internal static string DryRunOptionDescription {
            get {
                return ResourceManager.GetString("DryRunOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *** DRY RUN OUTPUT
        ///Specified versions:
        ///{0}
        ///*** END DRY RUN OUTPUT
        ///
        ///To avoid breaking Visual Studio or other problems, read https://aka.ms/dotnet-core-uninstall.
        ///
        ///Run this command as administrator, and take out the -—dry-run option to remove these items..
        /// </summary>
        internal static string DryRunOutputFormat {
            get {
                return ResourceManager.GetString("DryRunOutputFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is treated as a version {1} in this tool..
        /// </summary>
        internal static string HostingBundleFootnoteFormat {
            get {
                return ResourceManager.GetString("HostingBundleFootnoteFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified version is not valid: &quot;{0}&quot;..
        /// </summary>
        internal static string InvalidInputVersionExceptionMessageFormat {
            get {
                return ResourceManager.GetString("InvalidInputVersionExceptionMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List ASP.NET Core Runtimes..
        /// </summary>
        internal static string ListAspNetRuntimeOptionDescription {
            get {
                return ResourceManager.GetString("ListAspNetRuntimeOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ASP.NET Core Runtimes:.
        /// </summary>
        internal static string ListCommandAspNetRuntimeHeader {
            get {
                return ResourceManager.GetString("ListCommandAspNetRuntimeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List .NET Core SDKs or Runtimes that can be removed with this tool..
        /// </summary>
        internal static string ListCommandDescription {
            get {
                return ResourceManager.GetString("ListCommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .NET Core Runtime &amp; Hosting Bundles:.
        /// </summary>
        internal static string ListCommandHostingBundleHeader {
            get {
                return ResourceManager.GetString("ListCommandHostingBundleHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .NET Core Runtimes:.
        /// </summary>
        internal static string ListCommandRuntimeHeader {
            get {
                return ResourceManager.GetString("ListCommandRuntimeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .NET Core SDKs:.
        /// </summary>
        internal static string ListCommandSdkHeader {
            get {
                return ResourceManager.GetString("ListCommandSdkHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List .NET Core Runtime &amp; Hosting Bundles..
        /// </summary>
        internal static string ListHostingBundleOptionDescription {
            get {
                return ResourceManager.GetString("ListHostingBundleOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include .NET Core SDKs that cannot be uninstalled..
        /// </summary>
        internal static string ListIncludeRequiredOptionDescription {
            get {
                return ResourceManager.GetString("ListIncludeRequiredOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List .NET Core Runtimes..
        /// </summary>
        internal static string ListRuntimeOptionDescription {
            get {
                return ResourceManager.GetString("ListRuntimeOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List .NET Core SDKs..
        /// </summary>
        internal static string ListSdkOptionDescription {
            get {
                return ResourceManager.GetString("ListSdkOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List x64 .NET Core SDKs or Runtimes..
        /// </summary>
        internal static string ListX64OptionDescription {
            get {
                return ResourceManager.GetString("ListX64OptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List x86 .NET Core SDKs or Runtimes..
        /// </summary>
        internal static string ListX86OptionDescription {
            get {
                return ResourceManager.GetString("ListX86OptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft .NET Core {0} {1} (x64).
        /// </summary>
        internal static string MacOsBundleDisplayNameFormat {
            get {
                return ResourceManager.GetString("MacOsBundleDisplayNameFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must specify exactly one version for option: {0}..
        /// </summary>
        internal static string MoreThanOneVersionSpecifiedExceptionMessageFormat {
            get {
                return ResourceManager.GetString("MoreThanOneVersionSpecifiedExceptionMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot specify a version for option: {0}..
        /// </summary>
        internal static string MoreThanZeroVersionSpecifiedExceptionMessageFormat {
            get {
                return ResourceManager.GetString("MoreThanZeroVersionSpecifiedExceptionMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current user does not have adequate privileges. See https://aka.ms/dotnet-core-uninstall..
        /// </summary>
        internal static string NotAdminExceptionMessage {
            get {
                return ResourceManager.GetString("NotAdminExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This command is not supported on this operating system..
        /// </summary>
        internal static string OperatingSystemNotSupportedExceptionMessage {
            get {
                return ResourceManager.GetString("OperatingSystemNotSupportedExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must specify only one of the options: {0}..
        /// </summary>
        internal static string OptionsConflictExceptionMessageFormat {
            get {
                return ResourceManager.GetString("OptionsConflictExceptionMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required argument missing for the uninstall command..
        /// </summary>
        internal static string RequiredArgMissingForUninstallCommandExceptionMessage {
            get {
                return ResourceManager.GetString("RequiredArgMissingForUninstallCommandExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified version is not found: &quot;{0}&quot;..
        /// </summary>
        internal static string SpecifiedVersionNotFoundExceptionMessageFormat {
            get {
                return ResourceManager.GetString("SpecifiedVersionNotFoundExceptionMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VERSION.
        /// </summary>
        internal static string UninstallAllBelowOptionArgumentName {
            get {
                return ResourceManager.GetString("UninstallAllBelowOptionArgumentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove .NET Core SDKs or Runtimes below the specified version. The specified version will remain..
        /// </summary>
        internal static string UninstallAllBelowOptionDescription {
            get {
                return ResourceManager.GetString("UninstallAllBelowOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove .NET Core SDKs or Runtimes, except the one highest version..
        /// </summary>
        internal static string UninstallAllButLatestOptionDescription {
            get {
                return ResourceManager.GetString("UninstallAllButLatestOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VERSIONS.
        /// </summary>
        internal static string UninstallAllButOptionArgumentName {
            get {
                return ResourceManager.GetString("UninstallAllButOptionArgumentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove .NET Core SDKs or Runtimes, except those specified..
        /// </summary>
        internal static string UninstallAllButOptionDescription {
            get {
                return ResourceManager.GetString("UninstallAllButOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove .NET Core SDKs or Runtimes that have been superceded by higher patches..
        /// </summary>
        internal static string UninstallAllLowerPatchesOptionDescription {
            get {
                return ResourceManager.GetString("UninstallAllLowerPatchesOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove all .NET Core SDKs or Runtimes..
        /// </summary>
        internal static string UninstallAllOptionDescription {
            get {
                return ResourceManager.GetString("UninstallAllOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove .NET Core SDKs or Runtimes that are marked as previews, except the one highest preview..
        /// </summary>
        internal static string UninstallAllPreviewsButLatestOptionDescription {
            get {
                return ResourceManager.GetString("UninstallAllPreviewsButLatestOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove .NET Core SDKs or Runtimes that are marked as previews..
        /// </summary>
        internal static string UninstallAllPreviewsOptionDescription {
            get {
                return ResourceManager.GetString("UninstallAllPreviewsOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove ASP.NET Core Runtimes only..
        /// </summary>
        internal static string UninstallAspNetRuntimeOptionDescription {
            get {
                return ResourceManager.GetString("UninstallAspNetRuntimeOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout during uninstall: {0}..
        /// </summary>
        internal static string UninstallationFailedExceptionMessageFormat {
            get {
                return ResourceManager.GetString("UninstallationFailedExceptionMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The uninstallation operation failed. Exit code was {1} for &quot;{0}&quot;..
        /// </summary>
        internal static string UninstallationFailedExceptionWithExitCodeMessageFormat {
            get {
                return ResourceManager.GetString("UninstallationFailedExceptionWithExitCodeMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove .NET Core Runtime &amp; Hosting Bundles only..
        /// </summary>
        internal static string UninstallHostingBundleOptionDescription {
            get {
                return ResourceManager.GetString("UninstallHostingBundleOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MAJOR_MINOR.
        /// </summary>
        internal static string UninstallMajorMinorOptionArgumentName {
            get {
                return ResourceManager.GetString("UninstallMajorMinorOptionArgumentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove .NET Core SDKs or Runtimes that match the specified `major.minor` version..
        /// </summary>
        internal static string UninstallMajorMinorOptionDescription {
            get {
                return ResourceManager.GetString("UninstallMajorMinorOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified version to uninstall. You may list several versions, and response files are supported..
        /// </summary>
        internal static string UninstallNoOptionArgumentDescription {
            get {
                return ResourceManager.GetString("UninstallNoOptionArgumentDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VERSION.
        /// </summary>
        internal static string UninstallNoOptionArgumentName {
            get {
                return ResourceManager.GetString("UninstallNoOptionArgumentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove specified .NET Core SDKs or Runtimes. This tool can only uninstall items that were installed using .NET Core SDK or Runtime installers. Read the documentation of this tool at https://aka.ms/dotnet-core-uninstall..
        /// </summary>
        internal static string UninstallNoOptionDescription {
            get {
                return ResourceManager.GetString("UninstallNoOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalling: {0}..
        /// </summary>
        internal static string UninstallNormalVerbosityFormat {
            get {
                return ResourceManager.GetString("UninstallNormalVerbosityFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstallation not allowed. The following .NET Core SDKs cannot be uninstalled: {0}.
        /// </summary>
        internal static string UninstallNotAllowedExceptionFormat {
            get {
                return ResourceManager.GetString("UninstallNotAllowedExceptionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove .NET Core Runtimes only..
        /// </summary>
        internal static string UninstallRuntimeOptionDescription {
            get {
                return ResourceManager.GetString("UninstallRuntimeOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove .NET Core SDKs only..
        /// </summary>
        internal static string UninstallSdkOptionDescription {
            get {
                return ResourceManager.GetString("UninstallSdkOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can be used with --sdk, --runtime and --aspnet-runtime to remove x64..
        /// </summary>
        internal static string UninstallX64OptionDescription {
            get {
                return ResourceManager.GetString("UninstallX64OptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can be used with --sdk, --runtime and --aspnet-runtime to remove x86..
        /// </summary>
        internal static string UninstallX86OptionDescription {
            get {
                return ResourceManager.GetString("UninstallX86OptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allowed verbosity levels are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic]..
        /// </summary>
        internal static string VerbosityLevelInvalidExceptionMessage {
            get {
                return ResourceManager.GetString("VerbosityLevelInvalidExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LEVEL.
        /// </summary>
        internal static string VerbosityOptionArgumentName {
            get {
                return ResourceManager.GetString("VerbosityOptionArgumentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the verbosity level. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic]..
        /// </summary>
        internal static string VerbosityOptionDescription {
            get {
                return ResourceManager.GetString("VerbosityOptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not use a version before an option: {0}..
        /// </summary>
        internal static string VersionBeforeOptionExceptionMessageFormat {
            get {
                return ResourceManager.GetString("VersionBeforeOptionExceptionMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execute the command without requiring Y/n confirmation..
        /// </summary>
        internal static string YesOptionDescription {
            get {
                return ResourceManager.GetString("YesOptionDescription", resourceCulture);
            }
        }
    }
}
